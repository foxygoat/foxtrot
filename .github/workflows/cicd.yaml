name: CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ "*" ]

jobs:
  backend:
    name: Backend CI
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-go@v2
      with:
        stable: false
        go-version: 1.16.0-beta1
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    # Install golangci-lint, but run with --version so it does not run.
    # We run lint from the Makefile. Use @master because we want the
    # skip-go-installation option which has not yet been released.
    # TODO(camh): Change master to v2 when v2.4.0 is released.
    - name: Install golangci-lint
      uses: golangci/golangci-lint-action@master
      with:
        version: v1.33.2
        skip-go-installation: true
        args: --version
    - run: make
    - run: make docker-test

  frontend:
    name: Frontend CI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
    - uses: actions/setup-node@v2
      with:
        node-version: '15'
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - run: npm install
    - run: npm run check-format
    - run: npm run build

  release:
    name: Release
    needs: [backend, frontend]
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Bump version and push tag
      id: bump_version
      uses: anothrNick/github-tag-action@1.30.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: true
        DEFAULT_BUMP: patch
    # Create a release for frontpage visibility and downloading the tar
    - name: Get commit message
      run: git log --format=%B -n 1 HEAD > /tmp/commit-msg
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.bump_version.outputs.tag }}
        release_name: Release ${{ steps.bump_version.outputs.tag }}
        body_path: /tmp/commit-msg
    # Get the latest module version so pkg.go.dev updates
    - uses: actions/setup-go@v2
      with:
        go-version: 1.14
    - name: Update pkg.go.dev
      env:
        GO111MODULE: on
      working-directory: /tmp
      run: go get foxygo.at/foxtrot@${{ steps.bump_version.outputs.tag }}

  # Build and push images to Docker Hub
  deploy:
    name: Deploy
    needs: release
    if: always() && (github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'deploy'))
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Make docker tag
      id: make_tag
      run: echo ::set-output name=docker_tag::$(git describe --tags --match 'v*' --exact-match 2>/dev/null || echo pr${{github.event.number}})
      shell: bash
    - uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Set up QEMU (crossplatform Docker images)
      uses: docker/setup-qemu-action@v1
    - name: Set up docker buildx (crossplatform Docker images)
      uses: docker/setup-buildx-action@v1
    - run: make docker-build-release
      env:
        COMMIT_SHA: ${{ github.sha }}
        DOCKER_TAG: ${{ steps.make_tag.outputs.docker_tag }}
        DOCKER_PUSH_LATEST: ${{ github.event_name == 'push' }}
    - name: Make dev label
      if: github.event_name == 'pull_request'
      id: make_dev_label
      run: echo ::set-output name=dev_label::pr${{ github.event.number }}
      shell: bash
    - run: make jcdc-deploy-goat
      env:
        COMMIT_SHA: ${{ github.sha }}
        DEV: ${{ steps.make_dev_label.outputs.dev_label }}
        JCDC_URL: https://jcdc.jul.run/run
        JCDC_API_KEY: ${{ secrets.GOAT_JCDC_API_KEY }}
        DOCKER_TAG: ${{ steps.make_tag.outputs.docker_tag }}
